{
    "fields": [
        "AllianceColor INTEGER DEFAULT 0",
        "StartPos INTEGER DEFAULT 0",
        "CrossedLine INTEGER DEFAULT 0",
        "AutoLowerSuccess INTEGER DEFAULT 0",
        "AutoOuterSuccess INTEGER DEFAULT 0",
        "AutoInnerSuccess INTEGER DEFAULT 0",
        "AutoLowerFailures INTEGER DEFAULT 0",
        "AutoUpperFailures INTEGER DEFAULT 0",
        "LowerSuccess INTEGER DEFAULT 0",
        "OuterSuccess INTEGER DEFAULT 0",
        "InnerSuccess INTEGER DEFAULT 0",
        "LowerFailures INTEGER DEFAULT 0",
        "UpperFailures INTEGER DEFAULT 0",
        "UpperSecondsBetween TEXT DEFAULT ''",
        "ClimbAttempted INTEGER DEFAULT 0",
        "ClimbSuccess INTEGER DEFAULT 0",
        "LiftedOthersAttempted INTEGER DEFAULT 0",
        "LiftedOthersSuccess INTEGER DEFAULT 0",
        "ParkedAttempted INTEGER DEFAULT 0",
        "ParkedSuccess INTEGER DEFAULT 0",
        "WheelRotationAttempted INTEGER DEFAULT 0",
        "WheelRotationSuccess INTEGER DEFAULT 0",
        "WheelPositionAttempted INTEGER DEFAULT 0",
        "WheelPositionSuccess INTEGER DEFAULT 0",
        "ShootFromWall INTEGER DEFAULT 0",
        "ShootFromOpponentSide INTEGER DEFAULT 0",
        "ShootFromOwnSide INTEGER DEFAULT 0",
        "Points INTEGER DEFAULT 0",
        "Disabled INTEGER DEFAULT 0",
        "DriverRating INTEGER DEFAULT 0",
        "IntakeRating INTEGER DEFAULT 0",
        "DefenseRating INTEGER DEFAULT 0",
        "AvoidDefenseRating INTEGER DEFAULT 0",
        "Comment TEXT DEFAULT ''"
    ],
    "pitFields": [
        "DriveTrain TEXT DEFAULT ''",
        "TopSpeed INTEGER DEFAULT 0",
        "Weight INTEGER DEFAULT 0",
        "Height INTEGER DEFAULT 0",
        "CanMove INTEGER DEFAULT 0",
        "CanAutoDelay TEXT DEFAULT ''",
        "CanDeliverUpperAuto INTEGER DEFAULT 0",
        "CanDeliverLowerAuto INTEGER DEFAULT 0",
        "CanDeliverUpper INTEGER DEFAULT 0",
        "CanDeliverLower INTEGER DEFAULT 0",
        "CanRotate INTEGER DEFAULT 0",
        "CanPosition INTEGER DEFAULT 0",
        "ClimbHeight INTEGER DEFAULT 0",
        "CanLiftOthers INTEGER DEFAULT 0",
        "ShootFromWall INTEGER DEFAULT 0",
        "ShootFromOpponentSide INTEGER DEFAULT 0",
        "ShootFromOwnSide INTEGER DEFAULT 0",
        "MultipleDriveTeams INTEGER DEFAULT 0",
        "Comment TEXT DEFAULT ''",
        "Image TEXT DEFAULT ''"
    ],
    "forceClassic": {
        "auto": false,
        "teleop": false,
        "endgame": true
    },
    "hideClassic": true,
    "uploadChecks": {
        "pit": [
            {
                "field": "DriveTrain",
                "operator": "!=",
                "value": "",
                "message": "Please enter a drive train.",
                "binding": true
            },
            {
                "field": "Weight",
                "operator": ">",
                "value": 50,
                "message": "Are you sure this weight is correct?",
                "binding": false
            },
            {
                "field": "Weight",
                "operator": "<=",
                "value": 125,
                "message": "Weight must be measured without bumpers or batteries",
                "binding": true
            },
            {
                "field": "Height",
                "operator": ">",
                "value": 0,
                "message": "Are you sure this height is correct?",
                "binding": false
            },
            {
                "field": "Height",
                "operator": "<=",
                "value": 45,
                "message": "Height must be measured while not extended.",
                "binding": true
            },
            {
                "field": "ClimbHeight",
                "operator": "!=",
                "value": 0,
                "message": "Are you sure they can't climb?",
                "binding": false
            },
            {
                "script": "return (data.ClimbHeight > 12) || (data.ClimbHeight == 0)",
                "message": "Please enter climb height in inches.",
                "binding": true
            }
        ],
        "match": [
            {
                "script": "return !((data.WheelRotationAttempted == 0) && (data.WheelRotationSuccess == 1))",
                "message": "They can't rotate the wheel without attempting it.",
                "binding": true
            },
            {
                "script": "return !((data.WheelPositionAttempted == 0) && (data.WheelPositionSuccess == 1))",
                "message": "They can't position the wheel without attempting it.",
                "binding": true
            },
            {
                "script": "return data.ClimbSuccess + data.ParkedSuccess < 2",
                "message": "They can't be both parked and climbed!",
                "binding": true
            },
            {
                "script": "return !((data.ClimbAttempted == 0) && (data.ClimbSuccess == 1))",
                "message": "They can't climb successfully without attempting it.",
                "binding": true
            },
            {
                "script": "return !((data.LiftedOthersAttempted == 0) && (data.LiftedOthersSuccess == 1))",
                "message": "They can't lift others successfully without attempting it.",
                "binding": true
            },
            {
                "script": "return !((data.ParkedAttempted == 0) && (data.ParkedSuccess == 1))",
                "message": "You have marked park as successful but not attempted. Are you sure?",
                "binding": false
            },
            {
                "field": "Comment",
                "operator": "!=",
                "value": "",
                "message": "You must enter a comment.",
                "binding": true
            },
            {
                "script": "return (data.Comment.length > 15) || (data.Comment.length == 0)",
                "message": "Your comment is very short. Would you still like to continue?",
                "binding": false
            },
            {
                "field": "Points",
                "operator": ">",
                "value": 0,
                "message": "Are you sure the final score is correct?",
                "binding": false
            }
        ]
    },
    "helpText": {
        "auto": "<h2>Starting Position</h2>Select one of the large rectangular boxes to choose the starting position. This indicates the <b>physical location of the robot</b>, not it's position relative to the alliance partners. For example, 3 robots may all be in the rightmost position.<h2>Moved From Line</h2>Once you have selected a starting position, tap the dot at the top to indicate when the robot moves from the initation line. This means no part of the robot is above the white line. Tap the dot again to switch back.<h2>Scoring Box</h2>After selecting a starting position, a green and red box will appear on the side. This is used to indicate power cell scoring.<div style=\"margin-top: 12px; margin-bottom: 12px; margin-left: 16px;\"><span style=\"color: green;\">green</span> = success<br><span style=\"color: red;\">red</span> = failure/missed</div>The rows indicate different goals:<div style=\"margin-top: 12px; margin-bottom: 12px; margin-left: 16px;\"><u>Top row</u> = Inner goal <i>(small hole in the back of the outer goal)</i><br><u>Middle row</u> = Outer goal <i>(hexagonal goal above driver stations)</i><br><u>Lower row</u> = Lower goal <i>(long opening about 3ft off floor)</i></div>Failures for the inner and outer goals are combined because it is impossible to determine whether a missed shot would go into the inner goal. Unfortunately, it is sometimes difficult to distinguish between inner and outer shots or determine your robot's successes when multiple robots shoot simultaneously. In these cases, <b>make a best guess of how many power cells were scored.</b><br><br>The scoring buttons also track timing of shots. Try to tap as quickly as possible after shots were made.<h2>Control Panel (tele-op only)</h2>In tele-op, the control panel appears on the top or bottom on the field. Use the arrow and color wheel buttons to switch between rotation and position control.<div style=\"margin-top: 12px; margin-bottom: 12px; margin-left: 16px;\"><u>Rotation control</u> - <i>circular arrow</i> - This is the first control panel objective which activates stage 2 of the shield generator. The robot must rotate the control panel 3 times, causing the light to turn off.<br><u>Position control</u> - <i>color wheel</i> - This is the second control panel objective which activates stage 3 of the shield generator. The robot must position the control panel to a specific color, causing the light to turn off.</div>You can freely switch between these objectives. Tap \"Att\" to indicate a clear attempt by your robot and \"Suc\" to indicate a success. Tap either of these buttons again to deselect them.",
        "endgame": "<style>table {border-collapse: collapse; margin-left: 5px; margin-right: 5px;} td {border: 1px solid black; padding: 5px;} li.small {font-size: 16px;} .emoji {font-size: 24px;}</style><h2>Disabled / Fell</h2>Mark if the robot is <b>nonfunctional</b> for more than half the match. This includes disconnects, being disabled by the FMS, or falling over.<ul><li>Robot is disconnected when match starts, begins moving 10 seconds later - <i>do not mark as disabled</i></li><li>Robot is disabled by the FMS shortly after auto and doesn't move for the remainder of the match - <i>mark as disabled</i></li><li>Robot falls during the match and is quickly righted by an alliance partner - <i>do not mark as fallen</i></li></ul><h2>Shooting Locations</h2>Indicate which of the following positions the robot shot from:<div style=\"margin-top: 12px; margin-bottom: 12px; margin-left: 16px;\"><u>Wall</u> - against the wall under the power port<br><u>Opponent side</u> - anywhere on the side of the field closer to the power port (opposite the alliance driver stations)<br><u>Own side</u> - anywhere on the side of the field farther from the power port (close to the alliance driver stations)</div>If the robot was on the border of opponent and own sides, choose opponent.<h2>Driver Rating</h2><table><tr><td>NA</td><td>The robot did not move during teleop.</td></tr><tr><td>&#x2B50</td><td>Terrible - majority of time spent maneuvering.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Often has difficulty moving around / lining up for objectives.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Pretty good - occasionally has trouble maneuvering.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Rarely has difficulty moving around / lining up for objectives.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Incredibly efficient - moves around easily with no difficulty.</td></tr></table><h2>Intake Rating</h2><table><tr><td>NA</td><td>The robot did not intake power cells from the floor.</td></tr><tr><td>&#x2B50</td><td>Tried to intake power cells but usually failed.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Had difficulty with intake or intakes slowly.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Pretty fast and reliable - sometimes fails to intake.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Quite fast and reliable - regularly intakes with no difficulty.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Power cell magnet - no effort required.</td></tr></table><h2>Playing Defense Rating</h2><table><tr><td>NA</td><td>Did not go near any other robots.</td></tr><tr><td>&#x2B50</td><td>Came near another robot, and maybe got in their way once.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Actively tried to play defense, however it was incredibly inefficient.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Played halfway decent defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Slowed down the scoring robot a significant amount.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Absolutely shut down the offensive robot. Incredible driving.</td></tr></table><h2>Under Defense Rating</h2><table><tr><td>NA</td><td>Other robots did not go near them.</td></tr><tr><td>&#x2B50</td><td>Absolutely shut down by the defensive robot.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Slowed down by the defense robot a signficant amount.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Somewhat affected by defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Minimally affected by defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Defense? What defense?</td></tr></table><h2>Comments</h2><b>There is always something to comment on.</b><br>Goes directly to the coach's sheet - what would you tell the drive team?<ul><li>Observations about mechanisms - looks unstable, super well built, etc.<ul><li class=\"small\">\"Their climber is a little wobbly and tends to slide around on the generator switch.\"</li><li class=\"small\">\"Power cells regularly get stuck in the feeding mechanism.\"</li></ul></li><li>Unique strategies / good strategies / bad strategies<ul><li class=\"small\">\"They didn't progress past stage 1, instead focusing on scoring.\"</li><li class=\"small\">\"Chose to shoot from a difficult part of the field.\"</li></ul></li><li>Interesting mechanisms<ul><li class=\"small\">\"They have a system for passing power cells to an alliance partner during auto.\"</li></ul></li><li>Potential weaknesses<ul><li class=\"small\">\"Their vision system is easily interrupted by a defensive robot.\"</li><li class=\"small\">\"They can be pushed from the side easily but not head on.\"</li></ul></li><li>Out-of-character behavior<ul><li class=\"small\">\"Their driving is much worse than usual - maybe a new drive team.\"</li><li class=\"small\">\"They didn't shoot at all - shooter potentially broken.\"</li></ul></li><li>Fouls / lack of competence<ul><li class=\"small\">\"They got a series of fouls while doing defense, then their bumpers fell off and the battery was dragging behind them\" (If this happens, <i>please</i> tell us <span class=\"emoji\">&#x1F609</span>)</li></ul></li><li>Anything else you observe!</li></ul><div style=\"font-weight: bold; font-size: 22px;\">Bad comments:</div><ul><li>\"They were bad.\"<ul><li class=\"small\">Elaborate - what made them bad? Bad driving? Unreliable mechanisms? Bad strategizing?</li></ul></li><li>\"I couldn't see the field well.\"<ul><li class=\"small\">Not important to the drive team, and you should move to get a better view (if possible)</li></ul></li><li>\"Slow.\"<ul><li class=\"small\">Elaborate - in what way were they slow? Slow driving? Slow intake? Defense?</li></ul></li><li>\"Good driving.\"<ul><li class=\"small\">Give them a good driver rating! If you choose to comment on this, elaborate with more specifics</li></ul></li><li>\"Tie.\"<ul><li class=\"small\">We already know this from the score</li></ul></li><li>\"Piece fell off robot.\"<ul><li class=\"small\">What piece fell off the robot? If you don't know specifically, describe it</li></ul></li><li>\"I entered this comment so it was long enough.\"</li><li>\"fjkdshfjkhdskjfhdsjkhj\"<ul><li class=\"small\">We know who you are, and we will find you. <span class=\"emoji\">&#x1F621</span></li></ul></li></ul><h2>Final Score</h2>Wait for the <b>post-animation score</b>, after the match winner is officially announced, rather than the automated score immediately after the match completes.",
        "pit": "Try to find a team member not actively engaged in pit work, but feel free to interrupt if necessary (just be polite about it). Remember that you are representing our team, so be gracious and professional.<h2>Drive Train Type</h2>Include # of wheels if applicable. Common drive train types (though many more exist):<ul><li><u>Standard Tank</u> - 4-8 wheels, internal to superstructure</li><li><u>West Coast Drive</u> - similar to above, but wheels on outside of superstructure</li><li><u>Literal Tank</u> - standard tank but with tracks</li><li><u>Mecanum</u> - four mecanum roller wheels allowing omnidirectional movement</li><li><u>Swerve</u> - omnidirectional drive, but wildly complicated</li><li><u>H-Drive</u> - five omniwheels in an \"H\" shape</li></ul><h2>Top Speed</h2>Specify in feet per second. Leave blank if unknown.<h2>Weight</h2>Specify in pounds <b>without bumpers or batteries</b>.<h2>Height</h2>Robot height in inches when not extended.<h2>Can Move?</h2>Can they move from the initation line during auto? <i>Not just whether the robot is capable of driving in general.</i><h2>Can Delay Shooting?</h2>If they shoot during auto, can they delay in order to avoid interferring with shots from alliance partners? What are their options for doing so?<h2>Max Climb Reach</h2>What is the maximum height they can extend to while climbing? Leave blank if they can't climb.<h2>Can Lift Others?</h2>Are they capable of lifting another robot while climbing? - Do they have a buddy climb?<h2>Multiple Drive Teams?</h2>Do they use a single drive team throughout the entire event, or does it change between matches?<h2>Shooting Locations</h2>Indicate which of the following positions the robot can shoot from:<div style=\"margin-top: 12px; margin-bottom: 12px; margin-left: 16px;\"><u>Wall</u> - against the wall under the power port<br><u>Opponent side</u> - anywhere on the side of the field closer to the power port (opposite the alliance driver stations)<br><u>Own side</u> - anywhere on the side of the field farther from the power port (close to the alliance driver stations)</div>If the robot can shoot from the border of opponent and own sides, choose opponent.<h2>Comment</h2>What else was mentioned that is relevant to the drive team?<ul><li>Unique / interesting mechanisms</li><li>Focus on particular game objectives</li><li>Potential robot problems, broken mechanisms, etc.</li><li>Any other information you can provide!</li></ul><h2>Robot Image</h2><ul><li>Try to get a diagonal angle (so that the front and side are visible)</li><li>Avoid people / objects blocking parts of the robot (if possible)</li><li>Make sure the entire robot is in frame</li></ul>"
    },
    "classic": {
        "pit": [
            {
                "type": "text",
                "field": "DriveTrain",
                "label": "Drive Train Type"
            },
            {
                "type": "number",
                "field": "TopSpeed",
                "label": "Top Speed (f/s)"
            },
            {
                "type": "number",
                "field": "Weight",
                "label": "Weight (lbs)"
            },
            {
                "type": "number",
                "field": "Height",
                "label": "Height (in)"
            },
            {
                "type": "checkbox",
                "field": "CanMove",
                "label": "Can Move?"
            },
            {
                "type": "text",
                "field": "CanAutoDelay",
                "label": "Can delay shooting? How?"
            },
            {
                "type": "group",
                "label": "Can Deliver Auto?",
                "unit1": {
                    "type": "checkbox",
                    "field": "CanDeliverUpperAuto",
                    "label": "Upper"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "CanDeliverLowerAuto",
                    "label": "Lower"
                }
            },
            {
                "type": "group",
                "label": "Can Deliver Teleop?",
                "unit1": {
                    "type": "checkbox",
                    "field": "CanDeliverUpper",
                    "label": "Upper"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "CanDeliverLower",
                    "label": "Lower"
                }
            },
            {
                "type": "group",
                "label": "Can Do Wheel?",
                "unit1": {
                    "type": "checkbox",
                    "field": "CanRotate",
                    "label": "Rotation"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "CanPosition",
                    "label": "Position"
                }
            },
            {
                "type": "number",
                "field": "ClimbHeight",
                "label": "Max Climb Reach (in)"
            },
            {
                "type": "checkbox",
                "field": "CanLiftOthers",
                "label": "Can Lift Others?"
            },
            {
                "type": "checkbox",
                "field": "MultipleDriveTrains",
                "label": "Multiple Drive Teams?"
            },
            {
                "type": "break"
            },
            {
                "type": "checkbox",
                "field": "ShootFromWall",
                "label": "Shoot: Wall"
            },
            {
                "type": "checkbox",
                "field": "ShootFromOpponentSide",
                "label": "Shoot: Opponent Side"
            },
            {
                "type": "checkbox",
                "field": "ShootFromOwnSide",
                "label": "Shoot: Own Side"
            },
            {
                "type": "break"
            },
            {
                "type": "text",
                "field": "Comment",
                "label": "Comment"
            },
            {
                "type": "image",
                "field": "Image",
                "label": "Robot Image"
            },
            {
                "type": "uploadButton"
            }
        ],
        "auto": [
            {
                "type": "chooser",
                "field": "AllianceColor",
                "label": "Alliance Color",
                "options": {
                    "Red": 0,
                    "Blue": 1
                }
            },
            {
                "type": "chooser",
                "field": "StartPos",
                "label": "Start Position",
                "options": {
                    "Left": 0,
                    "Center": 1,
                    "Right": 2
                }
            },
            {
                "type": "checkbox",
                "field": "CrossedLine",
                "label": "Moved From Line"
            },
            {
                "type": "break"
            },
            {
                "type": "counter",
                "field": "AutoInnerSuccess",
                "label": "Inner Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "counter",
                "field": "AutoOuterSuccess",
                "label": "Outer Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "counter",
                "field": "AutoLowerSuccess",
                "label": "Lower Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "break"
            },
            {
                "type": "group",
                "label": "Failures",
                "unit1": {
                    "type": "counter",
                    "field": "AutoUpperFailures",
                    "label": "Upper",
                    "min": 0,
                    "max": 99,
                    "step": 1
                },
                "unit2": {
                    "type": "counter",
                    "field": "AutoLowerFailures",
                    "label": "Lower",
                    "min": 0,
                    "max": 99,
                    "step": 1
                }
            }
        ],
        "teleop": [
            {
                "type": "counter",
                "field": "InnerSuccess",
                "label": "Inner Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "counter",
                "field": "OuterSuccess",
                "label": "Outer Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "counter",
                "field": "LowerSuccess",
                "label": "Lower Success",
                "min": 0,
                "max": 99,
                "step": 1
            },
            {
                "type": "break"
            },
            {
                "type": "group",
                "label": "Failures",
                "unit1": {
                    "type": "counter",
                    "field": "UpperFailures",
                    "label": "Upper",
                    "min": 0,
                    "max": 99,
                    "step": 1
                },
                "unit2": {
                    "type": "counter",
                    "field": "LowerFailures",
                    "label": "Lower",
                    "min": 0,
                    "max": 99,
                    "step": 1
                }
            },
            {
                "type": "break"
            },
            {
                "type": "group",
                "label": "Wheel Rotation",
                "unit1": {
                    "type": "checkbox",
                    "field": "WheelRotationAttempted",
                    "label": "Attempted"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "WheelRotationSuccess",
                    "label": "Succesful"
                }
            },
            {
                "type": "group",
                "label": "Wheel Position",
                "unit1": {
                    "type": "checkbox",
                    "field": "WheelPositionAttempted",
                    "label": "Attempted"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "WheelPositionSuccess",
                    "label": "Succesful"
                }
            }
        ],
        "endgame": [
            {
                "type": "group",
                "label": "Climbed?",
                "unit1": {
                    "type": "checkbox",
                    "field": "ClimbAttempted",
                    "label": "Attempted"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "ClimbSuccess",
                    "label": "Success"
                }
            },
            {
                "type": "group",
                "label": "Lifted Others?",
                "unit1": {
                    "type": "checkbox",
                    "field": "LiftedOthersAttempted",
                    "label": "Attempted"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "LiftedOthersSuccess",
                    "label": "Success"
                }
            },
            {
                "type": "group",
                "label": "Parked?",
                "unit1": {
                    "type": "checkbox",
                    "field": "ParkedAttempted",
                    "label": "Attempted"
                },
                "unit2": {
                    "type": "checkbox",
                    "field": "ParkedSuccess",
                    "label": "Success"
                }
            },
            {
                "type": "checkbox",
                "field": "Disabled",
                "label": "Disabled/Fell?"
            },
            {
                "type": "break"
            },
            {
                "type": "checkbox",
                "field": "ShootFromWall",
                "label": "Shoot: Wall"
            },
            {
                "type": "checkbox",
                "field": "ShootFromOpponentSide",
                "label": "Shoot: Opponent Side"
            },
            {
                "type": "checkbox",
                "field": "ShootFromOwnSide",
                "label": "Shoot: Own Side"
            },
            {
                "type": "break"
            },
            {
                "type": "chooser",
                "field": "DriverRating",
                "label": "Driver Rating",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "chooser",
                "field": "IntakeRating",
                "label": "Intake Rating",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "group",
                "label": "Defense Rating",
                "unit1": {
                    "type": "chooser",
                    "field": "DefenseRating",
                    "label": "While Playing",
                    "options": {
                        "NA": 0,
                        "\u2B50": 1,
                        "\u2B50\u2B50": 2,
                        "\u2B50\u2B50\u2B50": 3,
                        "\u2B50\u2B50\u2B50\u2B50": 4,
                        "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                    }
                },
                "unit2": {
                    "type": "chooser",
                    "field": "AvoidDefenseRating",
                    "label": "While Under",
                    "options": {
                        "NA": 0,
                        "\u2B50": 1,
                        "\u2B50\u2B50": 2,
                        "\u2B50\u2B50\u2B50": 3,
                        "\u2B50\u2B50\u2B50\u2B50": 4,
                        "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                    }
                }
            },
            {
                "type": "text",
                "field": "Comment",
                "label": "Comment"
            },
            {
                "type": "number",
                "field": "Points",
                "label": "Final Score"
            },
            {
                "type": "uploadButton"
            }
        ]
    }
}